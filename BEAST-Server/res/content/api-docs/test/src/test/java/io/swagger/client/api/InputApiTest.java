/*
 * Private API
 * Assessment Private API - Do not use!
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AbstractApp;
import io.swagger.client.model.AccessDeniedException;
import io.swagger.client.model.DeviceNotFoundException;
import io.swagger.client.model.DeviceReservationFailedException;
import io.swagger.client.model.Intent;
import io.swagger.client.model.ModelAPIException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InputApi
 */
@Ignore
public class InputApiTest {

    private final InputApi api = new InputApi();

    /**
     * Sends an intent to the system to start a service
     *
     * Sends an intent to the system to start a service. Android only
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void broadcastTest() throws ApiException {
        Integer devid = null;
        String receiverPermission = null;
        Intent body = null;
        List<String> response = api.broadcast(devid, receiverPermission, body);

        // TODO: test validations
    }
    /**
     * Sends an intent to the system to start an activity
     *
     * Sends an intent to the system to start an activity. Android only
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startActivityTest() throws ApiException {
        Integer devid = null;
        Boolean forceStopBefore = null;
        Boolean waitForDebugger = null;
        Intent body = null;
        List<String> response = api.startActivity(devid, forceStopBefore, waitForDebugger, body);

        // TODO: test validations
    }
    /**
     * Sends an intent to the system to start a service
     *
     * Sends an intent to the system to start a service. Android only
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startForegroundServiceTest() throws ApiException {
        Integer devid = null;
        Intent body = null;
        List<String> response = api.startForegroundService(devid, body);

        // TODO: test validations
    }
    /**
     * Sends an intent to the system to start a service
     *
     * Sends an intent to the system to start a service. Android only
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startServiceTest() throws ApiException {
        Integer devid = null;
        Intent body = null;
        List<String> response = api.startService(devid, body);

        // TODO: test validations
    }
    /**
     * Sends an intent to the system to stop a service
     *
     * Sends an intent to the system to stop a service. Android only
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stopServiceTest() throws ApiException {
        Integer devid = null;
        Intent body = null;
        List<String> response = api.stopService(devid, body);

        // TODO: test validations
    }
    /**
     * Taps on screen
     *
     * Taps on screen
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tapTest() throws ApiException {
        Integer devid = null;
        Integer x = null;
        Integer y = null;
        AbstractApp response = api.tap(devid, x, y);

        // TODO: test validations
    }
    /**
     * Inputs text
     *
     * Inputs text
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void typeTextTest() throws ApiException {
        Integer devid = null;
        String text = null;
        AbstractApp response = api.typeText(devid, text);

        // TODO: test validations
    }
}
