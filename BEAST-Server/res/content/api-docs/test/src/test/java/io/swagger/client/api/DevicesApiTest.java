/*
 * Private API
 * Assessment Private API - Do not use!
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AccessDeniedException;
import io.swagger.client.model.DeviceInformation;
import io.swagger.client.model.DeviceRequirements;
import io.swagger.client.model.ModelAPIException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DevicesApi
 */
@Ignore
public class DevicesApiTest {

    private final DevicesApi api = new DevicesApi();

    /**
     * Returns a list of devices
     *
     * Returns devices
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDevicesTest() throws ApiException {
        DeviceRequirements body = null;
        List<DeviceInformation> response = api.getDevices(body);

        // TODO: test validations
    }
    /**
     * Downloads a screenshot
     *
     * Downloads a screenshot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScreenshotTest() throws ApiException {
        Integer devid = null;
        Object response = api.getScreenshot(devid);

        // TODO: test validations
    }
    /**
     * Release all devices reserved by the API key
     *
     * Release all devices reserved by the API key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void releaseAllDevicesTest() throws ApiException {
        api.releaseAllDevices();

        // TODO: test validations
    }
    /**
     * Get all jobs
     *
     * Get all jobs currently on the analysis server. Note that for performance reasons, this method does not return the job results. Instead, it returns the job status and metadata.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void releaseDeviceTest() throws ApiException {
        Integer devid = null;
        api.releaseDevice(devid);

        // TODO: test validations
    }
    /**
     * Reserves a device
     *
     * Reserves a device and returns it (if successful)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reserveDeviceTest() throws ApiException {
        DeviceRequirements body = null;
        DeviceInformation response = api.reserveDevice(body);

        // TODO: test validations
    }
    /**
     * Gets device information
     *
     * Gets device information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reserveDevice1Test() throws ApiException {
        Integer devid = null;
        DeviceInformation response = api.reserveDevice1(devid);

        // TODO: test validations
    }
}
